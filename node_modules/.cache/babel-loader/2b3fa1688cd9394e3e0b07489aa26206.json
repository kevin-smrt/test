{"ast":null,"code":"var _jsxFileName = \"/home/kevin_smrt/perso/telemaque/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport './css/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  // Variable pour stocker tous les films populaires\n  const [allFilms, setAllFilms] = useState([]); // Fonction pour récupérer tous les films populaires\n\n  async function getAllPopularFilms() {\n    // Variable temporaire pour stocker les films dans la boucle\n    let data = []; // Boucle d'appel à l'API, besoin de récupérer 40 films donc -> besoin des 2 premières pages (20 par pages)\n\n    for (let page = 1; page < 3; page++) {\n      // Appel de l'API\n      let films = await fetch(`https://api.themoviedb.org/3/movie/popular?api_key=c89646cb9c2f9f7a6144c074fff0e9c7&language=fr-FR&page=${page}`); // Passage au format JSON\n\n      let filmsToJSON = await films.json(); // Rajoute les données voulu au tableau temporaire existant\n\n      data = data.concat(filmsToJSON.results); // Besoin seulement de \"results\"\n    } // Ajout des films dans notre variable allFilms\n\n\n    setAllFilms(data);\n  }\n\n  Useeff;\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Template React\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"Qh48F1KKcTquqHxy9lgODqiyT8E=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/kevin_smrt/perso/telemaque/src/App.js"],"names":["useState","App","allFilms","setAllFilms","getAllPopularFilms","data","page","films","fetch","filmsToJSON","json","concat","results","Useeff"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,eAAP;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC1B;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAAC,EAAD,CAAxC,CAF0B,CAI1B;;AACA,iBAAeI,kBAAf,GAAoC;AAChC;AACA,QAAIC,IAAI,GAAG,EAAX,CAFgC,CAGhC;;AACA,SAAK,IAAIC,IAAI,GAAG,CAAhB,EAAmBA,IAAI,GAAG,CAA1B,EAA6BA,IAAI,EAAjC,EAAqC;AACjC;AACA,UAAIC,KAAK,GAAG,MAAMC,KAAK,CAAE,2GAA0GF,IAAK,EAAjH,CAAvB,CAFiC,CAGjC;;AACA,UAAIG,WAAW,GAAG,MAAMF,KAAK,CAACG,IAAN,EAAxB,CAJiC,CAMjC;;AACAL,MAAAA,IAAI,GAAGA,IAAI,CAACM,MAAL,CAAYF,WAAW,CAACG,OAAxB,CAAP,CAPiC,CAOQ;AAC5C,KAZ+B,CAchC;;;AACAT,IAAAA,WAAW,CAACE,IAAD,CAAX;AACH;;AAEDQ,EAAAA,MAAM;AAEN,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;GA5BuBZ,G;;KAAAA,G","sourcesContent":["import { useState } from 'react';\nimport './css/App.css';\n\nexport default function App() {\n    // Variable pour stocker tous les films populaires\n    const [allFilms, setAllFilms] = useState([]);\n\n    // Fonction pour récupérer tous les films populaires\n    async function getAllPopularFilms() {\n        // Variable temporaire pour stocker les films dans la boucle\n        let data = [];\n        // Boucle d'appel à l'API, besoin de récupérer 40 films donc -> besoin des 2 premières pages (20 par pages)\n        for (let page = 1; page < 3; page++) {\n            // Appel de l'API\n            let films = await fetch(`https://api.themoviedb.org/3/movie/popular?api_key=c89646cb9c2f9f7a6144c074fff0e9c7&language=fr-FR&page=${page}`);\n            // Passage au format JSON\n            let filmsToJSON = await films.json();\n\n            // Rajoute les données voulu au tableau temporaire existant\n            data = data.concat(filmsToJSON.results); // Besoin seulement de \"results\"\n        }\n\n        // Ajout des films dans notre variable allFilms\n        setAllFilms(data);\n    }\n\n    Useeff\n\n    return (\n        <h1>Template React</h1>\n  );\n}"]},"metadata":{},"sourceType":"module"}